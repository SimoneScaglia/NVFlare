DEFAULT_ITER = 10

splits = {
    # "data": {
    #     # 1: [(97.5,), (95,), (90,), (80,), (70,), (60,), (50,), (40,), (30,), (20,), (10,)],
    #     2: [(48.75, 48.75), (47.5, 47.5), (45, 45), (40, 40), (35, 35), (30, 30), (25, 25), (20, 20), (15, 15), (10, 10), (5, 5)],
    #     3: [(32.5, 32.5, 32.5), (31.66, 31.66, 31.66), (30, 30, 30), (26.66, 26.66, 26.66), (23.33, 23.33, 23.33), (20, 20, 20), (16.66, 16.66, 16.66), (13.33, 13.33, 13.33), (10, 10, 10), (6.66, 6.66, 6.66), (3.33, 3.33, 3.33)],
    #     4: [(24.375, 24.375, 24.375, 24.375), (23.75, 23.75, 23.75, 23.75), (22.5, 22.5, 22.5, 22.5), (20, 20, 20, 20), (17.5, 17.5, 17.5, 17.5), (15, 15, 15, 15), (12.5, 12.5, 12.5, 12.5), (10, 10, 10, 10), (7.5, 7.5, 7.5, 7.5), (5, 5, 5, 5), (2.5, 2.5, 2.5, 2.5)]
    # },
    "exp": {
        # 2: [(97.5, 2.5), (95, 5), (90, 10), (80, 20), (70, 30), (60, 40), (50, 50), (40, 60), (30, 70), (20, 80), (10, 90)],
        # 3: [(48.75, 48.75, 2.5), (47.5, 47.5, 5), (45, 45, 10), (40, 40, 20), (35, 35, 30), (30, 30, 40), (25, 25, 50), (20, 20, 60), (15, 15, 70), (10, 10, 80), (5, 5, 90)],
        # 4: [(32.5, 32.5, 32.5, 2.5), (31.66, 31.66, 31.66, 5), (30, 30, 30, 10), (26.66, 26.66, 26.66, 20), (23.33, 23.33, 23.33, 30), (20, 20, 20, 40), (16.66, 16.66, 16.66, 50), (13.33, 13.33, 13.33, 60), (10, 10, 10, 70), (6.66, 6.66, 6.66, 80), (3.33, 3.33, 3.33, 90)],
        # 5: [(24.375, 24.375, 24.375, 24.375, 2.5), (23.75, 23.75, 23.75, 23.75, 5), (22.5, 22.5, 22.5, 22.5, 10), (20, 20, 20, 20, 20), (17.5, 17.5, 17.5, 17.5, 30), (15, 15, 15, 15, 40), (12.5, 12.5, 12.5, 12.5, 50), (10, 10, 10, 10, 60), (7.5, 7.5, 7.5, 7.5, 70), (5, 5, 5, 5, 80), (2.5, 2.5, 2.5, 2.5, 90)]
        10: [(*[round((100-p)/9, 2)]*  9, p) for p in [2.5,5,10,20,30,40,50,60,70,80,90]],
        15: [(*[round((100-p)/14, 2)]*14, p) for p in [2.5,5,10,20,30,40,50,60,70,80,90]],
        20: [(*[round((100-p)/19, 2)]*19, p) for p in [2.5,5,10,20,30,40,50,60,70,80,90]],
        25: [(*[round((100-p)/24, 2)]*24, p) for p in [2.5,5,10,20,30,40,50,60,70,80,90]],
    }
}

with open('run.sh', 'w') as f:
    for mode in splits:
        for num_site in splits[mode]:
            for split in splits[mode][num_site]:
                for iter in range(DEFAULT_ITER):
                    command = f"./start_exp.sh {iter} {num_site} {' '.join(map(str, split))}\n"
                    f.write(command)
